Include "MAPBASIC.DEF"
Include  "GET_TAB.MB"
Include "AbotLib.def"
Declare Sub Main
Declare Sub SelChangedHandler
declare sub connect
declare sub disconnect
declare sub selectionlistener
declare sub errorhandler
Declare sub RemoteMsgHandler
declare sub paint
declare sub paintrequest(req as String)
declare sub conditionOnClick
declare function parseCondition(value as String) as String

Dim ar As Integer
Dim num As Integer
Dim activated as logical
dim table as String
dim selectedStyle as Brush

sub Main
	activated = 0
	create menu "Редактор базы" as
	"Подключиться" calling connect,
	"(Оформить" id 101 calling paint
	alter menu bar add "Редактор базы"
	alter menu item id 101 disable

end sub

sub selchangedhandler
	if activated = 1 then
		call selectionlistener
	end if
end sub

sub connect
	onerror goto exc
	num = ddeinitiate("geobaseeditor", "areaselection")
	print "Редактор базы подключен"
	activated = 1
	alter menu item id 101 enable
	exit sub
exc:
	note "Не удалось подключится к редактору"
end sub

sub disconnect
	ddeterminateall
	print "Редактор базы отключен"
	activated = 0
end sub

dim selectedType1, selectedType2, selectedType3, logic2, logic3 as SmallInt
dim value1, value2, value3, condition1, condition2, condition3 as String

sub paint
	table = GetTableName("Выберите слой", 0, 0)
	dim types(10) as String
    types(1) = "ОЗУ"
    types(2) = "ЦНЛ"
    types(3) = "порода"
    types(4) = "бонитет"
    types(5) = "полнота"
    types(6) = "запас"
    types(7) = "23 макет"
    types(8) = "категория земель"

    'dim conditionValues(3) as String
    'conditionValues(1) = "="
    'conditionValues(2) = "<"

    dialog title "Оформление"
        control statictext
            title "Параметр 1"
            position 6, 7
        control popupmenu
            id 1
            title from variable types into selectedType1
            position 49, 5
            calling conditionOnClick
        control popupmenu
            id 2
            title "=;<;>"
            position 136, 5
            into condition1
        control edittext
            id 3
            position 164, 5
            into value1
        control popupmenu
            id 4
            title "И;ИЛИ"
            position 6, 25
            into logic2
        control statictext
            title "Параметр 2"
            position 6, 47
        control popupmenu
            id 5
            title from variable types into selectedType2
            position 49, 45
            calling conditionOnClick
        control popupmenu
            id 6
            title "=;<;>"
            position 136, 45
            into condition2
        control edittext
            id 7
            position 164, 45
            into value2
        control popupmenu
            id 8
            title "И;ИЛИ"
            position 6, 60
            into logic3
        control statictext
            title "Параметр 3"
            position 6, 87
        control popupmenu
            id 9
            title from variable types into selectedType3
            position 49, 85
            calling conditionOnClick
        control popupmenu
            id 10
            title "=;<;>"
            position 136, 85
            into condition3
        control edittext
            id 11
            position 164, 85
            into value3
        control statictext
            title "Выберите стиль"
            position 6, 115
        control BrushPicker
            into selectedStyle
		position 68, 105
        control OKButton
        Control CancelButton

	if value1 = "" and value2 = "" and value3 = "" then exit sub
	end if

	dim request as String
	request = "1"+ "?" + selectedType1 + "?" + parseCondition(condition1) + "?" + value1 + "|" + logic2 + "?" + selectedType2 + "?" + parseCondition(condition2) + "?" +
	    value2 + "|" + logic3 + "?" + selectedType3 + "?" + parseCondition(condition3) + "?" + value3
	call paintrequest(request)

end sub

sub conditionOnClick
    dim selectedType, conditionId as SmallInt
    print "selected id " + triggerControl()
    selectedType = readControlValue(triggerControl())
    do case triggerControl()
        case 1
            conditionId = 2
        case 5
            conditionId = 6
        case 9
            conditionId = 10
    end case
    print "condition id " + conditionId
    print "selected type " + selectedType
    if selectedType = 3 or selectedType = 7 then
        alter control conditionId
            title "="
    else alter control conditionId
            title "=;<;>"
    end if
end sub

function parseCondition(value as String) as String
	do case value
		case "1" parseCondition = "="
		case "2" parseCondition = "<"
		case "3" parseCondition = ">"
	end case
end function



sub paintrequest(req as String)
    dim response as String
    response = ddeRequest$(num, req)
    if response = "0" then Note "Искомые выдела не найдены"
    else
	    print "response: " + response
        dim startIdx, curIdsIdx, vId, cur_size as Integer
        dim subStr as String
        dim ids(0) as Float
	    dim styles(0) as Brush
        curIdsIdx = 1
        startIdx = 1

        while startIdx < Len(response)
            subStr = Mid$(response, startIdx, 6)
            startIdx = startIdx + 7

            vId = Val(subStr)
            cur_size = UBound(ids)
            ReDim ids(cur_size + 2)
            ReDim styles(cur_size + 2)
            ids(curIdsIdx) = vId
            ids(curIdsIdx + 1) = vId
            styles(curIdsIdx) = selectedStyle
            styles(curIdsIdx + 1) = selectedStyle
            curIdsIdx = curIdsIdx + 2
        wend
        shade table with Id Ranges from variable ids style variable styles style replace off
        note "Оформлено " + cur_size + " выделов"
    end if

end sub

sub selectionlistener
	onerror goto ex
	if IsFieldExist("Selection", "Id") = false then exit sub
	end if
	ar = selection.id
	if commandinfo(1) = 1 then
		dim sq as Float
		sq = CartesianArea(selection.obj, "hectare")
		if sq = 0 then
			ddepoke num, "selection", STR$(ar)
		else
			ddepoke num, "selection_with_area", STR$(ar) + "|" + STR$(sq)
		end if
	end if
	exit sub
ex:
	call errorhandler
end sub

sub errorhandler
	dim code as Integer
	code = err()
	print "error " + code
	activated = 0
	if code = 696 then call disconnect
	end if
end sub

'sub RemoteMsgHandler()
'	'Dim data As String
'	'data = CommandInfo()
'	'print "requested data : " + data
'End sub
